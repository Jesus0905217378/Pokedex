/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.clase.pk;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import javax.imageio.ImageIO;

/**
 *
 * @author Jesus Alberto
 */
public class VentanaPokedex extends javax.swing.JFrame {

    BufferedImage buffer1 = null;
    Image imagen1 = null;
    int contador = 0;

    Statement estado;
    ResultSet resultadoConsulta;
    Connection conexion;

    @Override
    public void paint(Graphics g) {
        super.paintComponents(g);
        Graphics2D g2 = (Graphics2D) imagenPokemon.getGraphics();

        g2.drawImage(buffer1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), null);

    }

    /**
     * Creates new form VentanaPokedex
     */
    public VentanaPokedex() {
        initComponents();

        try {
            imagen1 = ImageIO.read(new File("C:\\Users\\Jesus Alberto\\Desktop\\Proyecto pokemon\\datos\\imagenes\\black-white.png"));

        } catch (IOException e) {
            System.out.println("Error al cargar la imagen");
        }

        buffer1 = (BufferedImage) imagenPokemon.createImage(imagenPokemon.getWidth(), imagenPokemon.getHeight());

        Graphics2D g2 = buffer1.createGraphics();

        dibujaElPokemonQueEstaEnLaPosicion(30);

        try {
            Class.forName("com.mysql.jdbc.Driver");
            String JDBC_URL = "jdbc:mysql://localhost:3306/pokedex?zeroDateTimeBehavior=convertToNull&useSSL=false&useTimezone=true&serverTimezone=UTC";
            conexion = DriverManager.getConnection(JDBC_URL, "root", "bb010901bb");
            estado = conexion.createStatement();

        } catch (Exception e) {
            System.out.println("Hay error" + e.getMessage());
        }

    }

    private void dibujaElPokemonQueEstaEnLaPosicion(int posicion) {
        int fila = posicion / 31;
        int columna = posicion % 31;
        Graphics2D g2 = (Graphics2D) buffer1.getGraphics();
        g2.setColor(Color.black);
        g2.fillRect(0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight());

        g2.drawImage(imagen1,
                0, //posicion X inicial dentro del jpanel 
                0, // posicion Y inicial dentro del jpanel
                imagenPokemon.getWidth(), //ancho del jpanel
                imagenPokemon.getHeight(), //alto del jpanel
                columna * 96, //posicion inicial X dentro de la imagen de todos los pokemon
                fila * 96, //posicion inicial Y dentro de la imagen de todos los pokemon
                columna * 96 + 96, //posicion final X
                fila * 96 + 96, //posicion final Y
                null //si no lo pones no va
        );
        repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagenPokemon = new javax.swing.JPanel();
        izq = new javax.swing.JButton();
        der = new javax.swing.JButton();
        nombrePokemon = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        BtnBuscar = new javax.swing.JButton();
        IdPokemon = new javax.swing.JLabel();
        especiePokemon = new javax.swing.JLabel();
        habitatPokemon = new javax.swing.JLabel();
        colorPokemon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout imagenPokemonLayout = new javax.swing.GroupLayout(imagenPokemon);
        imagenPokemon.setLayout(imagenPokemonLayout);
        imagenPokemonLayout.setHorizontalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 329, Short.MAX_VALUE)
        );
        imagenPokemonLayout.setVerticalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        izq.setText("<== Izquierda");
        izq.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        izq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izqActionPerformed(evt);
            }
        });

        der.setText("Derecha ==>");
        der.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derActionPerformed(evt);
            }
        });

        nombrePokemon.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        nombrePokemon.setText("Aqui va el nombre");

        BtnBuscar.setText("Buscar");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });

        IdPokemon.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        IdPokemon.setText("Id");

        especiePokemon.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        especiePokemon.setText("Especie");

        habitatPokemon.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        habitatPokemon.setText("Habitat");

        colorPokemon.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        colorPokemon.setText("Color");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(izq)
                        .addGap(122, 122, 122)
                        .addComponent(der))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imagenPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(txtid)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IdPokemon)
                            .addComponent(nombrePokemon)
                            .addComponent(especiePokemon)
                            .addComponent(habitatPokemon)
                            .addComponent(colorPokemon))))
                .addContainerGap(227, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imagenPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(nombrePokemon)
                        .addGap(18, 18, 18)
                        .addComponent(IdPokemon)
                        .addGap(18, 18, 18)
                        .addComponent(especiePokemon)
                        .addGap(18, 18, 18)
                        .addComponent(colorPokemon)
                        .addGap(18, 18, 18)
                        .addComponent(habitatPokemon)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(izq)
                    .addComponent(der)
                    .addComponent(BtnBuscar))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void izqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izqActionPerformed
        // TODO add your handling code here:
        String cueri = "select * from pokemon where id=" + (contador);
        dibujaElPokemonQueEstaEnLaPosicion(contador);
        try {
            resultadoConsulta = estado.executeQuery(cueri);
            if (resultadoConsulta.next()) {
                nombrePokemon.setText(resultadoConsulta.getString(2));
                IdPokemon.setText("Id = "+resultadoConsulta.getString("id"));
                especiePokemon.setText("Especie = "+resultadoConsulta.getString("species"));
                colorPokemon.setText("Color = "+resultadoConsulta.getString("color"));
                habitatPokemon.setText("Habitat = "+resultadoConsulta.getString("habitat"));
                
            } else {
                nombrePokemon.setText("Ese chucho no figura en la pokedex");
                IdPokemon.setText("id");
                especiePokemon.setText("Especie");
                colorPokemon.setText("Color");
                habitatPokemon.setText("Habitat");
            }
            contador--;
            if (contador < 0) {
                contador = 0;
            }

        } catch (Exception e) {
            System.out.println("Hubo un erro en derecha" + e.getMessage());
        }

        dibujaElPokemonQueEstaEnLaPosicion(contador);
    }//GEN-LAST:event_izqActionPerformed

    private void derActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derActionPerformed
        // TODO add your handling code here:
        String cuerito = "select * from pokemon where id=" + (contador+1);

        dibujaElPokemonQueEstaEnLaPosicion(contador);
        try {
            resultadoConsulta = estado.executeQuery(cuerito);
            if (resultadoConsulta.next()) {
                nombrePokemon.setText(resultadoConsulta.getString(2));
                IdPokemon.setText("Id = "+resultadoConsulta.getString("id"));
                especiePokemon.setText("Especie = "+resultadoConsulta.getString("species"));
                colorPokemon.setText("Color = "+resultadoConsulta.getString("color"));
                habitatPokemon.setText("Habitat = "+resultadoConsulta.getString("habitat"));

            } else {
                nombrePokemon.setText("Ese chucho no figura en la pokedex");
                IdPokemon.setText("id");
                especiePokemon.setText("Especie");
                colorPokemon.setText("Color");
                habitatPokemon.setText("Habitat");

            }

        } catch (Exception e) {
            System.out.println("Hubo un error en derecha" + e.getMessage());
        }
        contador++;
        if (contador > 649) {
            contador = 649;
        }
    }//GEN-LAST:event_derActionPerformed

    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
        // TODO add your handling code here:
        String cuerito = "select * from pokemon where id=" + txtid.getText();

        dibujaElPokemonQueEstaEnLaPosicion(Integer.parseInt(txtid.getText()));
        try {
            resultadoConsulta = estado.executeQuery(cuerito);
            if (resultadoConsulta.next()) {
                nombrePokemon.setText(resultadoConsulta.getString(2));
                IdPokemon.setText("Id = "+resultadoConsulta.getString("id"));
                especiePokemon.setText("Especie = "+resultadoConsulta.getString("species"));
                colorPokemon.setText("Color = "+resultadoConsulta.getString("color"));
                habitatPokemon.setText("Habitat = "+resultadoConsulta.getString("habitat"));

            } else {
                nombrePokemon.setText("Ese chucho no figura en la pokedex");
                IdPokemon.setText("id");
                especiePokemon.setText("Especie");
                colorPokemon.setText("Color");
                habitatPokemon.setText("Habitat");
            }

        } catch (Exception e) {
            System.out.println("Hubo un error en derecha" + e.getMessage());
        }
        contador = Integer.parseInt(txtid.getText());
    }//GEN-LAST:event_BtnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JLabel IdPokemon;
    private javax.swing.JLabel colorPokemon;
    private javax.swing.JButton der;
    private javax.swing.JLabel especiePokemon;
    private javax.swing.JLabel habitatPokemon;
    private javax.swing.JPanel imagenPokemon;
    private javax.swing.JButton izq;
    private javax.swing.JLabel nombrePokemon;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
